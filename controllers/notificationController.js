const Food = require("../models/foodModel");
const User = require("../models/userModel");
const admin = require("../config/firebase");

/**
 * G·ª≠i notification tr·ª±c ti·∫øp t·ªõi 1 thi·∫øt b·ªã (test nhanh)
 * Body c·∫ßn: { fcmToken, title, body }
 */
exports.sendNotification = async (req, res) => {
    try {
        const { fcmToken, title, body } = req.body;

        if (!fcmToken) {
            return res.status(400).json({ error: "Thi·∫øu fcmToken" });
        }

        const message = {
            token: fcmToken,
            notification: {
                title: title || "Th√¥ng b√°o m·ªõi",
                body: body || "B·∫°n c√≥ m·ªôt tin nh·∫Øn",
            },
        };

        const response = await admin.messaging().send(message);
        console.log("‚úÖ Sent direct notification:", response);

        res.json({ success: true, response });
    } catch (err) {
        console.error("‚ùå sendNotification ERROR:", err.message);
        res.status(500).json({ error: err.message });
    }
};

/**
 * Qu√©t database ‚Üí t√¨m food s·∫Øp h·∫øt h·∫°n ‚Üí g·ª≠i notification cho user
 */
exports.autoNotifyExpiringFoods = async (req, res) => {
    try {
        console.log("üîî autoNotifyExpiringFoods START");

        const foods = await Food.find({});
        console.log(`üì¶ Found ${foods.length} foods`);

        const now = new Date();

        // T·∫°o 1 object l∆∞u danh s√°ch food s·∫Øp h·∫øt h·∫°n theo user
        const userFoodsMap = {};

        for (const food of foods) {
            if (!food.expiryDate) continue;

            const expiry = new Date(food.expiryDate);
            const diffDays = Math.ceil((expiry - now) / (1000 * 60 * 60 * 24));

            if (diffDays <= 2) {
                if (!userFoodsMap[food.userId]) userFoodsMap[food.userId] = [];
                userFoodsMap[food.userId].push({ name: food.name, diffDays });
            }
        }

        let totalNotifies = 0;

        // G·ª≠i 1 th√¥ng b√°o cho m·ªói user, li·ªát k√™ t·∫•t c·∫£ food
        for (const userId of Object.keys(userFoodsMap)) {
            const user = await User.findById(userId);
            if (!user?.fcmToken) {
                console.log(`‚ö†Ô∏è User ${userId} has no fcmToken`);
                continue;
            }

            const foodsListStr = userFoodsMap[userId]
                .map(f => `${f.name} s·∫Ω h·∫øt h·∫°n sau ${f.diffDays} ng√†y`)
                .join("\n"); // n·ªëi th√†nh 1 string, m·ªói food tr√™n 1 d√≤ng

            const message = {
                token: user.fcmToken,
                notification: {
                    title: "‚ö†Ô∏è Th·ª±c ph·∫©m s·∫Øp h·∫øt h·∫°n",
                    body: foodsListStr, // ‚úÖ string
                },
            };


            await admin.messaging().send(message);
            console.log(`‚úÖ Sent 1 notification to user ${user._id}`);
            totalNotifies++;
        }

        res.json({ success: true, message: `ƒê√£ g·ª≠i ${totalNotifies} th√¥ng b√°o g·ªôp` });
    } catch (err) {
        console.error("‚ùå autoNotifyExpiringFoods ERROR:", err.message);
        res.status(500).json({ error: err.message });
    }
};
